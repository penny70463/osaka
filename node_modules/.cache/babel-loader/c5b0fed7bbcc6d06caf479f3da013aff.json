{"remainingRequest":"/Users/penny_kuo/Penny/osaka/node_modules/babel-loader/lib/index.js!/Users/penny_kuo/Penny/osaka/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/penny_kuo/Penny/osaka/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/penny_kuo/Penny/osaka/src/views/map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/penny_kuo/Penny/osaka/src/views/map.vue","mtime":1578800783657},{"path":"/Users/penny_kuo/Penny/osaka/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/penny_kuo/Penny/osaka/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/penny_kuo/Penny/osaka/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/penny_kuo/Penny/osaka/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/penny_kuo/Penny/osaka/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/penny_kuo/Penny/osaka/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState, mapGetters, mapMutations } from 'vuex';\nimport { mapFields } from 'vuex-map-fields';\nimport { osakaPass } from \"../dummy_data/dataList\";\nexport default {\n  props: {\n    center: {\n      type: Object,\n      default: function _default() {\n        return {\n          lat: 34.669203,\n          lng: 135.503570\n        };\n      }\n    },\n    zoom: {\n      type: Number,\n      default: 12\n    },\n    streetViewControl: {\n      type: Boolean,\n      default: true\n    },\n    mapTypeControl: {\n      type: Boolean,\n      default: true\n    },\n    fullscreenControl: {\n      type: Boolean,\n      default: true\n    },\n    zoomControl: {\n      type: Boolean,\n      default: true\n    },\n    restaurants: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    requests: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  computed: _objectSpread({}, mapState('Home', ['markUrl', 'passCategory', 'queryString', 'currentPosition', 'queryDistance', 'destinations']), {}, mapGetters('Home', ['convertOsakaPass']), {\n    queryStringChange: function queryStringChange() {\n      return this.queryString;\n    },\n    currPosition: function currPosition() {\n      return this.currentPosition;\n    }\n  }),\n  data: function data() {\n    return {\n      map: null,\n      infowindow: null,\n      markers: [],\n      locations: [],\n      osakaPass: osakaPass\n    };\n  },\n  watch: {\n    center: function center(val) {\n      this.resetCenter();\n    },\n    requests: function requests() {\n      this.initMap();\n      this.passReq();\n    },\n    queryStringChange: function queryStringChange() {\n      this.passReq();\n    },\n    currPosition: function currPosition() {\n      this.initMap();\n      this.currMarker();\n    }\n  },\n  mounted: function mounted() {\n    this.initMap();\n    this.passReq();\n  },\n  methods: _objectSpread({}, mapActions('Home', []), {\n    initMap: function initMap() {\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        center: this.center,\n        zoom: this.zoom,\n        maxZoom: 20,\n        minZoom: 3,\n        streetViewControl: this.streetViewControl,\n        mapTypeControl: this.mapTypeControl,\n        fullscreenControl: this.fullscreenControl,\n        zoomControl: this.zoomControl\n      });\n    },\n    resetCenter: function resetCenter(lat, lng) {\n      // set center\n      this.map.panTo({\n        lat: lat || this.center.lat,\n        lng: lng || this.center.lng\n      });\n    },\n    clearMarkers: function clearMarkers() {\n      this.markers.forEach(function (marker) {\n        return marker.setMap(null);\n      });\n      this.markers = [];\n    },\n    getPlaces: function () {\n      var _getPlaces = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(req, type) {\n        var service, map2;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$store.commit('Home/setMarkUrl', type, {\n                  root: true\n                });\n\n              case 2:\n                service = new google.maps.places.PlacesService(this.map);\n                map2 = this.map;\n                service.findPlaceFromQuery(req.queryObj, function (results, status) {\n                  if (status == 'OK') {\n                    var marker = new google.maps.Marker({\n                      map: map2,\n                      position: results[0].geometry.location,\n                      icon: {\n                        url: 'http://maps.google.com/mapfiles/kml/pushpin/' + type,\n                        size: new google.maps.Size(50, 50),\n                        origin: new google.maps.Point(0, 0),\n                        anchor: new google.maps.Point(17, 34),\n                        scaledSize: new google.maps.Size(50, 50)\n                      }\n                    });\n                    google.maps.event.addListener(marker, 'click', function () {\n                      var infowindow = new google.maps.InfoWindow({});\n                      infowindow.setContent(\"\".concat(results[0].name, \" : \").concat(results[0].formatted_address));\n                      infowindow.open(this.map, marker);\n                    });\n                  } //若為搜尋結果,resetCenter\n\n\n                  if (type === 'red-pushpin.png') {\n                    map2.panTo(results[0].geometry.location);\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getPlaces(_x, _x2) {\n        return _getPlaces.apply(this, arguments);\n      }\n\n      return getPlaces;\n    }(),\n    passReq: function () {\n      var _passReq = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var test, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, req;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                test = function _ref(val) {\n                  if (val.type) {\n                    return 'red-pushpin.png';\n                  } else {\n                    return 'wht-pushpin.png';\n                  }\n                };\n\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context2.prev = 4;\n                _iterator = this.requests[Symbol.iterator]();\n\n              case 6:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                req = _step.value;\n                _context2.next = 10;\n                return this.getPlaces(req, test(req));\n\n              case 10:\n                _iteratorNormalCompletion = true;\n                _context2.next = 6;\n                break;\n\n              case 13:\n                _context2.next = 19;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](4);\n                _didIteratorError = true;\n                _iteratorError = _context2.t0;\n\n              case 19:\n                _context2.prev = 19;\n                _context2.prev = 20;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 22:\n                _context2.prev = 22;\n\n                if (!_didIteratorError) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 25:\n                return _context2.finish(22);\n\n              case 26:\n                return _context2.finish(19);\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 15, 19, 27], [20,, 22, 26]]);\n      }));\n\n      function passReq() {\n        return _passReq.apply(this, arguments);\n      }\n\n      return passReq;\n    }(),\n    test: function test(elm, idx) {\n      var service = new google.maps.places.PlacesService(this.map);\n      service.findPlaceFromQuery({\n        query: elm,\n        fields: ['name', 'geometry', 'formatted_address']\n      }, this.test2(idx));\n    },\n    test2: function test2(idx) {\n      //destinations.push(results[0].geometry.location);\n      return function (results, status) {\n        console.log(results[0].geometry.location, idx);\n      };\n    },\n    //經緯度create Marker\n    currMarker: function () {\n      var _currMarker = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this = this;\n\n        var temp, marker, originPosition;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                temp = [];\n                Object.values(this.osakaPass).forEach(function (elm) {\n                  elm.forEach(function (el) {\n                    temp = temp.concat(el);\n                  });\n                });\n                marker = new google.maps.Marker({\n                  map: this.map,\n                  position: new google.maps.LatLng(this.currPosition.lat, this.currPosition.lng)\n                });\n                google.maps.event.addListener(marker, 'click', function () {\n                  var infowindow = new google.maps.InfoWindow({});\n                  infowindow.setContent(\"your position\");\n                  infowindow.open(this.map, marker);\n                });\n                this.resetCenter(this.currPosition.lat, this.currPosition.lng);\n                originPosition = new google.maps.LatLng(this.currPosition.lat, this.currPosition.lng);\n                temp.forEach(function (elm, idx) {\n                  _this.test(elm, idx);\n                });\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function currMarker() {\n        return _currMarker.apply(this, arguments);\n      }\n\n      return currMarker;\n    }()\n  })\n};",{"version":3,"sources":["map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<h2>map here</h2>\r\n\t\t<div\r\n\t\t\tid=\"map\"\r\n\t\t\tclass=\"google-map\"\r\n\t\t/>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport { mapActions, mapState, mapGetters, mapMutations } from 'vuex';\r\nimport { mapFields } from 'vuex-map-fields';\r\nimport { osakaPass } from '../dummy_data/dataList';\r\n\r\nexport default {\r\n\tprops: {\r\n\t\tcenter: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({ lat: 34.669203, lng: 135.503570 }),\r\n\t\t},\r\n\t\tzoom: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 12,\r\n\t\t},\r\n\t\tstreetViewControl: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tmapTypeControl: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tfullscreenControl: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\tzoomControl: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t},\r\n\t\trestaurants: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [\r\n\t\t\t],\r\n\t\t},\r\n\t\trequests: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => [\r\n\t\t\t],\r\n\t\t},\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState('Home', [\r\n\t\t\t'markUrl',\r\n\t\t\t'passCategory',\r\n\t\t\t'queryString',\r\n\t\t\t'currentPosition',\r\n\t\t\t'queryDistance',\r\n\t\t\t'destinations',\r\n\t\t]\r\n\t\t),\r\n\t\t...mapGetters('Home', [\r\n\t\t\t'convertOsakaPass',\r\n\t\t]),\r\n\t\tqueryStringChange() {\r\n\t\t\treturn this.queryString;\r\n\t\t},\r\n\t\tcurrPosition() {\r\n\t\t\treturn this.currentPosition;\r\n\t\t},\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tmap: null,\r\n\t\t\tinfowindow: null,\r\n\t\t\tmarkers: [],\r\n\t\t\tlocations: [],\r\n\t\t\tosakaPass,\r\n\t\t};\r\n\t},\r\n\twatch: {\r\n\t\tcenter(val) {\r\n\t\t\tthis.resetCenter();\r\n\t\t},\r\n\t\trequests() {\r\n\t\t\tthis.initMap();\r\n\t\t\tthis.passReq();\r\n\t\t},\r\n\t\tqueryStringChange() {\r\n\t\t\tthis.passReq();\r\n\t\t},\r\n\t\tcurrPosition() {\r\n\t\t\tthis.initMap();\r\n\t\t\tthis.currMarker();\r\n\t\t},\r\n\t},\r\n\tmounted() {\r\n\t\tthis.initMap();\r\n\t\tthis.passReq();\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('Home', [\r\n\t\t\t\r\n\t\t]),\r\n\t\tinitMap() {\r\n\t\t\tthis.map = new google.maps.Map(document.getElementById('map'), {\r\n\t\t\t\tcenter: this.center,\r\n\t\t\t\tzoom: this.zoom,\r\n\t\t\t\tmaxZoom: 20,\r\n\t\t\t\tminZoom: 3,\r\n\t\t\t\tstreetViewControl: this.streetViewControl,\r\n\t\t\t\tmapTypeControl: this.mapTypeControl,\r\n\t\t\t\tfullscreenControl: this.fullscreenControl,\r\n\t\t\t\tzoomControl: this.zoomControl,\r\n\t\t\t});\r\n\t\t},\r\n\t\tresetCenter(lat, lng) {\r\n\t\t\t// set center\r\n\t\t\tthis.map.panTo({ lat: lat || this.center.lat, lng: lng || this.center.lng });\r\n\t\t},\r\n\t\tclearMarkers() {\r\n\t\t\tthis.markers.forEach(marker => marker.setMap(null));\r\n\t\t\tthis.markers = [];\r\n\t\t},\r\n\t\t\r\n\t\tasync getPlaces(req, type) {\r\n\t\t\tawait this.$store.commit('Home/setMarkUrl', type, { root: true });\r\n\t\t\tlet service = new google.maps.places.PlacesService(this.map);\r\n\t\t\tlet map2 = this.map;\r\n\t\t\t\r\n\t\t\tservice.findPlaceFromQuery(req.queryObj, function(results, status) {\r\n\t\t\t\tif(status == 'OK') {\r\n\t\t\t\t\tlet marker = new google.maps.Marker({\r\n          \t\t\t\tmap: map2,\r\n\t\t\t\t  \t\tposition: results[0].geometry.location,\r\n\t\t\t\t \t\t icon: {\r\n\t\t\t\t\t\t\turl: 'http://maps.google.com/mapfiles/kml/pushpin/' + type,\r\n\t\t\t\t\t\t\tsize: new google.maps.Size(50, 50),\r\n\t\t\t\t\t\t\torigin: new google.maps.Point(0, 0),\r\n\t\t\t\t\t\t\tanchor: new google.maps.Point(17, 34),\r\n\t\t\t\t\t\t\tscaledSize: new google.maps.Size(50, 50),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tgoogle.maps.event.addListener(marker, 'click', function() {\r\n\t\t\t\t\t\tlet infowindow = new google.maps.InfoWindow({\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tinfowindow.setContent(`${results[0].name} : ${results[0].formatted_address}`);\r\n\t\t\t\t\t\tinfowindow.open(this.map, marker);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t//若為搜尋結果,resetCenter\r\n\t\t\t\tif(type === 'red-pushpin.png') {\r\n\t\t\t\t\tmap2.panTo(results[0].geometry.location);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync passReq() {\r\n\t\t\tfunction test(val) {\r\n\t\t\t\tif(val.type) {\r\n\t\t\t\t\treturn 'red-pushpin.png';\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 'wht-pushpin.png';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(let req of this.requests) {\r\n\t\t\t\tawait this.getPlaces(req, test(req));\r\n\t\t\t}\r\n\t\t},\r\n\t\ttest(elm, idx) {\r\n\t\t\tlet service = new google.maps.places.PlacesService(this.map);\r\n\t\t\tservice.findPlaceFromQuery({ query: elm,\r\n\t\t\t\tfields: ['name', 'geometry', 'formatted_address'] }, this.test2(idx));\r\n\t\t},\r\n\t\ttest2(idx) {\r\n\t\t\t//destinations.push(results[0].geometry.location);\r\n\t\t\treturn (results, status)=>{\r\n\t\t\t\tconsole.log(results[0].geometry.location, idx);\r\n\t\t\t};\r\n\t\t},\r\n\t\t//經緯度create Marker\r\n\t\tasync currMarker() {\r\n\t\t\tlet temp = [];\r\n\t\t\tObject.values(this.osakaPass).forEach(elm=>{\r\n\t\t\t\telm.forEach(el=>{\r\n\t\t\t\t\ttemp = temp.concat(el);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tlet marker = new google.maps.Marker({\r\n          \t\t\t\tmap: this.map,\r\n\t\t\t\t  \t\tposition: new google.maps.LatLng(this.currPosition.lat, this.currPosition.lng),\r\n\t\t\t});\r\n\t\t\tgoogle.maps.event.addListener(marker, 'click', function() {\r\n\t\t\t\tlet infowindow = new google.maps.InfoWindow({\r\n\t\t\t\t});\r\n\t\t\t\tinfowindow.setContent(`your position`);\r\n\t\t\t\tinfowindow.open(this.map, marker);\r\n\t\t\t});\r\n\t\t\tthis.resetCenter(this.currPosition.lat, this.currPosition.lng);\r\n\t\t\tlet originPosition = new google.maps.LatLng(this.currPosition.lat, this.currPosition.lng);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\ttemp.forEach((elm, idx)=>{\r\n\t\t\t\tthis.test(elm, idx);\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n<style>\r\n#map{\r\n\theight:500px;\r\n\twidth:100%;\r\n}\r\n</style>"],"sourceRoot":"src/views"}]}